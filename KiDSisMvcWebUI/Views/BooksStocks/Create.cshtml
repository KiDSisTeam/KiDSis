@model KiDSisMvcWebUI.Models.ShoolBooksStocksViewModel

@{
    ViewBag.Title = "Book Stock Create";
}

<div class="bg-light">
    <ul class="list-group ">
        <li class="list-group-item bg-info" style="text-align:center">
            <h2 style="color:white">Yeni Kayıt</h2>
        </li>
    </ul>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">
                Okul Türü
            </label>
            @*@Html.LabelFor(model => model.BookCount, htmlAttributes: new { @class = "control-label col-md-2" })*@

            <div class="col-md-10">

                <select id="Category" name="Category" class="form-control">
                    @foreach (var item in ViewBag.ShoolListViewBag)
                    {
                        if (item != "İLÇE MİLLİ EĞİTİM")
                        {
                            <option> @item</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.SchoolsCategory, "", new { @class = "text-danger" })
            </div>



        </div>




        <div class="form-group">
            <label class="control-label col-md-2">
                Kitap Sınıfı
            </label>

            <div class="col-md-10">

                <select id="Class1" name="Class" class="form-control">
                    @*@foreach (var item in ViewBag.BookClassListViewBag)
                    { }
                    <option> @item</option>*@

                </select>


                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <label class="control-label col-md-2">
                Kitap Adı
            </label>
            @*@Html.LabelFor(model => model.BookCount, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <select id="NameProperty" name="Name" class="form-control">
                    @*@foreach (var item in ViewBag.BookNameListViewBag)
                    {
                        <option> @item</option>
                    }*@
                </select>



                @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.BookCount, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label class="control-label col-md-2">
                Kitap Sayısı
            </label>
            @*@Html.LabelFor(model => model.BookCount, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Oluştur" class="btn btn-outline-info" />
            </div>
        </div>
    </div>
    }

    <div class="control-label col-md-2">
        @Html.ActionLink("Geri Dön", "Index")
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        debugger
        $.getJSON('/BooksStocks/GetClass', { Category: $('#Category').val() }, function (data) {
            $.each(data, function () {
                console.log(data);
                debugger
                $('#Class1').append('<option value=' +
                    this.Class + '>' + this.Class + '</option>');
            });
            BookName($('#Class1').val())

            //debugger
            //$.getJSON('/BooksStocks/GetBookName', { Class: $('#Class1').val() }, function (data) {
            //    $.each(data, function () {
            //        console.log(data);
            //        $('#NameProperty').append('<option value=' +
            //            this.Id + '>' + this.Class + '</option>');
            //        console.log(this);
            //    });

            //}).fail(function (jqXHR, textStatus, errorThrown) {
            //    alert('Error getting Class');
            //});
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting Category!');
        });
       
        // örnek kod
        //$(document).ready(function () {
        //    // Get a list of categories and a list of products of the first category.
        //    $.getJSON('/home/GetCategories', null, function (data) {
        //        $.each(data, function () {
        //            $('#category').append('<option value=' +
        //                this.CategoryID + '>' + this.CategoryName + '</option>');
        //        });
        //        $.getJSON('/home/GetProducts', { intCatID: $('#category').val() }, function (data) {
        //            $.each(data, function () {
        //                $('#product').append('<option value=' +
        //                    this.ProductID + '>' + this.ProductName + '</option>');
        //            });
        //        }).fail(function (jqXHR, textStatus, errorThrown) {
        //            alert('Error getting products!');
        //        });
        //    }).fail(function (jqXHR, textStatus, errorThrown) {
        //        alert('Error getting categories!');
        //    });









       
        //$.getJSON('/BooksStocks/GetBookName', { Class: $('#Class').val() }, function (data) {
        //    $.each(data, function () {
        //        $('#NameProperty').append('<option value=' +
        //            this.Id + '>' + this.Name + '</option>');
        //    });
        //}).fail(function (jqXHR, textStatus, errorThrown) {
        //    alert('Error getting Class!');
        //});
        

        $('#Category').change(function () {
            $('#Class1 option').remove();
            debugger
            $.getJSON('/BooksStocks/GetClass', { Category: $('#Category').val() }, function (data) {
                $.each(data, function () {
                    $('#Class1').append('<option value=' +
                        this.Class + '>' + this.Class + '</option>');
                });
                BookName($('#Class1').val())
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Category2');
            });
        });


        $('#Class1').change(function () {
            $('#NameProperty option').remove();
            debugger
            $.getJSON('/BooksStocks/GetBookName', { Class: $('#Class1').val() }, function (data) {
                $.each(data, function () {
                    $('#NameProperty').append('<option value=' +
                        this.Id + '>' + this.Name + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Category2');
            });
        });



        // Dropdown list change event.
        //$('#Class').change(function () {
        //    $('#NameProperty option').remove();
        //    $.getJSON('/BooksNeeds/GetBookName', { Class: $('#Class').val() }, function (data) {
        //        $.each(data, function () {
        //            $('#NameProperty').append('<option value=' +
        //                this.Id + '>' + this.Name + '</option>');
        //        });
        //    }).fail(function (jqXHR, textStatus, errorThrown) {
        //        alert('Error getting products!');
        //    });
        //});
    });

</script>

@*Gökhanın yazdığı kod*@

<script>
    function BookName(_bookname)
    {
        $('#NameProperty option').remove();
        $.getJSON('/BooksStocks/GetBookName', { Class: _bookname }, function (data) {
            $.each(data, function () {
                console.log(data);
                debugger
                $('#NameProperty').append('<option value=' +
                    this.Id + '>' + this.Name + '</option>');
            });
           
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting Category!');
        });
    }

</script>