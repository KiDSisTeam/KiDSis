@model KiDSisMvcWebUI.Models.Book

@{
    ViewBag.Title = "Create";
}

<div class="bg-light">
    <ul class="list-group ">
        <li class="list-group-item bg-info" style="text-align:center">

            <h2 style="color:white">Yeni Kitap Kayıt</h2>

        </li>



    </ul>




    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @if (ViewBag.KayıtHata != "")
                {<div class="alert alert-danger" role="alert">
                        <i class="fa fa-exclamation-triangle" @*style="font-size: 48px;"*@></i>&nbsp;&nbsp;
                        <b>@ViewBag.KayıtHata</b>

                    </div>


                }

                @*@Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">
                    Okul Türü
                </label>

                <div class="col-md-10">

                    <select id="Category" name="BookType" class="form-control">
                        @foreach (var item in ViewBag.ShoolListViewBag)
                        {
                            if (item != "İLÇE MİLLİ EĞİTİM")
                            {
                                <option> @item</option>
                            }
                        }
                    </select>

                    @*@Html.EditorFor(model => model.BookType, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.BookType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    Sınıf
                </label>
                <div class="col-md-10">
                    <select id="Class1" name="Class" class="form-control">
                        @*@foreach (var item in ViewBag.BookClassListViewBag)
                            { }
                            <option> @item</option>*@

                    </select>

                </div>


                @*@Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @*<div class="col-md-10">
                        @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                    </div>*@
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    Kitap Kodu
                </label>
                @*@Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    Kitap İsmi
                </label>
                @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Oluştur" class="btn btn-outline-info" />
                </div>
            </div>
        </div>
    }

    <div class="control-label col-md-2">
        @Html.ActionLink("Geri Dön", "Index")
    </div>

</div>

<script type="text/javascript">
    $(document).ready(function () {

        debugger
        $.getJSON('/SchoolClasses/GetClass', { Category: $('#Category').val() }, function (data) {
            $.each(data, function () {
                console.log(data);
                debugger
                $('#Class1').append('<option value=' +
                    this.Class + '>' + this.Class + '</option>');
            });
            BookName($('#Class1').val())


        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting Category!');
        });

        $('#Category').change(function () {
            $('#Class1 option').remove();
            debugger
            $.getJSON('/SchoolClasses/GetClass', { Category: $('#Category').val() }, function (data) {
                $.each(data, function () {
                    $('#Class1').append('<option value=' +
                        this.Class + '>' + this.Class + '</option>');
                });
                BookName($('#Class1').val())
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Category2');
            });
        });


        $('#Class1').change(function () {
            $('#NameProperty option').remove();
            debugger
            $.getJSON('/BooksStocks/GetBookName', { Class: $('#Class1').val() }, function (data) {
                $.each(data, function () {
                    $('#NameProperty').append('<option value=' +
                        this.Id + '>' + this.Name + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Category2');
            });
        });

    });

</script>